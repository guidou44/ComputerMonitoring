<Window x:Class="DesktopAssistant.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopAssistant.Views"
        xmlns:ViewModels="clr-namespace:DesktopAssistant.ViewModels"
        xmlns:tb="http://www.hardcodet.net/taskbar" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:Converters="clr-namespace:Common.UI.Converters;assembly=Common.UI"
        mc:Ignorable="d"
        x:Name="WatchdogWindow"
        WindowStyle="None"
        WindowStartupLocation="Manual"
        AllowsTransparency="True"
        Background="Transparent"
        SizeToContent="WidthAndHeight"
        ShowInTaskbar="False"
        ResizeMode="NoResize"
        Topmost="True"
        MinHeight="80"
        MinWidth="350"
        >
  
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <Converters:CommandParameterConverter x:Key="CommandParameterConverter" />
        
        <Style x:Key="{x:Type ProgressBar}"
               TargetType="{x:Type ProgressBar}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Border BorderBrush="Black" 
                                BorderThickness="2" 
                                Background="{Binding ElementName=WatchdogWindow, Path=DataContext.UiSettings.ProgressBarBackGround}" 
                                CornerRadius="5" 
                                Padding="0">
                            <Grid x:Name="PART_Track">
                                <Rectangle x:Name="PART_Indicator" 
                                           HorizontalAlignment="Left" 
                                           Fill="{Binding ElementName=WatchdogWindow, Path=DataContext.UiSettings.ProgressBar}" 
                                           RadiusX="5" 
                                           RadiusY="5"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="220"/>
        </Style>
        <Style x:Key="{x:Type TextBlock}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Consola"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Foreground" Value="{Binding ElementName=WatchdogWindow, Path=DataContext.UiSettings.FontMain}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{Binding ElementName=WatchdogWindow, Path=DataContext.UiSettings.Main}"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="CornerRadius" Value="30"/>
        </Style>

        <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{Binding ElementName=WatchdogWindow, Path=DataContext.UiSettings.FontMain}"/>
        </Style>
    </Window.Resources> 

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding ResizeWindowCommand}">
                <i:InvokeCommandAction.CommandParameter>
                    <MultiBinding Converter="{StaticResource CommandParameterConverter}">
                        <Binding Source="{x:Static SystemParameters.WorkArea}"/>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                    </MultiBinding>
                </i:InvokeCommandAction.CommandParameter>
            </i:InvokeCommandAction>
        </i:EventTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding ResizeWindowCommand}">
                <i:InvokeCommandAction.CommandParameter>
                    <MultiBinding Converter="{StaticResource CommandParameterConverter}">
                        <Binding Source="{x:Static SystemParameters.WorkArea}"/>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                    </MultiBinding>
                </i:InvokeCommandAction.CommandParameter>
            </i:InvokeCommandAction>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding SetWindowOnTopCommand}"
                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Visibility="{Binding IsApplicationVisible, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        
        <Border 
            x:Name="OptionMenu"
            Grid.Column="0"
            BorderBrush="{Binding UiSettings.Main}"
            BorderThickness="5"
            CornerRadius="30"
            Width="70"
            Margin="0 0 -70 0"
            Visibility="{Binding IsOptionMenuVisible, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed, NotifyOnSourceUpdated=True}">
            
            <Border.Background>
                <SolidColorBrush Color="{Binding UiSettings.BackGroundSecondary}" Opacity="{Binding UiSettings.BackGroundSecondaryOpacity}" />
            </Border.Background>
            
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding UpdateOptionMenuDisplayCommand}" CommandParameter="false"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsOptionMenuVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ThicknessAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0 0 -70 0" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:00.2" Value="0 0 0 0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:00.5" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                <ContentControl Margin="0 10 0 10">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Green"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Image Source="Images/hardware.ico" Height="20"/>
                    </Grid>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding OpenHardwareSettingsWindowCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ContentControl>
                <ContentControl Margin="0 10 0 10">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Green"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Image Source="Images/eye2.ico" Height="20"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding OpenProcessSettingsWindowCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Grid>
                </ContentControl>
                <ContentControl Margin="0 10 0 10">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Green"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Image Source="Images/paint.ico" Height="20"/>
                    </Grid>
                </ContentControl>
                <ContentControl Margin="0 10 0 10">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Green"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Image Source="Images/terminal_shell.ico" Height="20"/>
                    </Grid>
                </ContentControl>
            </StackPanel>
        </Border>
        <Border 
            Style="{StaticResource BorderStyle}"
            Grid.Column="1">
            <Border.Background>
                <SolidColorBrush Color="{Binding UiSettings.BackGroundMain}" Opacity="{Binding UiSettings.BackGroundMainOpacity}" />
            </Border.Background>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <tb:TaskbarIcon
              IconSource="Images/Green_circle.ico"
                MenuActivation="RightClick"
                PopupActivation="LeftClick">
                    <tb:TaskbarIcon.TrayToolTip>
                        <Border

                        Background="{Binding UiSettings.BackGroundSecondary}"
                        BorderBrush="{Binding UiSettings.Main}"
                        BorderThickness="1"
                        CornerRadius="4"
                        Opacity="0.8"
                        Padding="3">
                            <TextBlock
                            Text="Computer Monitoring&#10;Computer Watchdog"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{Binding UiSettings.FontMain}"
                            FontSize="14"
                        />
                        </Border>
                    </tb:TaskbarIcon.TrayToolTip>
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu
                        Background="{Binding UiSettings.BackGroundSecondary}"
                        FontSize="14"
                        FontWeight="Medium"
                        BorderBrush="{Binding UiSettings.Main}"
                        BorderThickness="3">
                            <MenuItem Header="Show Monitoring" Command="{Binding ShowApplicationCommand}">
                                <MenuItem.Icon>
                                    <Image Source="Images/plus.ico" Margin="1"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Hide Monitoring" Command="{Binding HideApplicationCommand}">
                                <MenuItem.Icon>
                                    <Image Source="Images/minus.ico" Margin="1"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Kill Monitoring" 
                                  Command="{Binding KillAppCommand, Mode=OneWay}"
                                  CommandParameter="{x:Reference Name=WatchdogWindow}">
                                <MenuItem.Icon>
                                    <Image Source="Images/stop.ico" Margin="1"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>
                </tb:TaskbarIcon>

                <DockPanel  Grid.Row="1"
                            Grid.Column="0">
                                    <DockPanel
                            HorizontalAlignment="Left" Dock="Left">
                    <ContentControl HorizontalAlignment="Left" Margin="10 0 10 10">
                        <Grid>

                            <Ellipse Height="27" Width="27" Fill="{Binding UiSettings.Main}"/>
                            <Image Source="Images/settings_simple.ico" Height="27"/>
                        </Grid>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <i:InvokeCommandAction Command="{Binding UpdateOptionMenuDisplayCommand}" CommandParameter="true"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ContentControl>
                </DockPanel>
                <DockPanel HorizontalAlignment="Right" Dock="Right">
                    <Grid Margin="0 0 20 10"  
                      HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <ItemsControl ItemsSource="{Binding ProcessesUnderWatch}"
                                      Grid.Column="0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <Grid>
                                            <Border 
                                            Height="24"
                                            Width="24"
                                            Opacity="1"
                                            CornerRadius="12"
                                            BorderThickness="3"
                                            Margin="5 0 5 0">
                                                <Border.Style>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                                <Setter Property="Background" Value="#0D7B00" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsRunning}" Value="False">
                                                                <Setter Property="Background" Value="#B58628" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DoCapture}" Value="False">
                                                                <Setter Property="BorderBrush" Value="Black" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DoCapture}" Value="True">
                                                                <Setter Property="BorderBrush" Value="DarkGreen" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>

                                            </Border>
                                            <TextBlock
                                            Foreground="Black"
                                            FontStyle="Normal"
                                            FontWeight="Normal"
                                            FontSize="14"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Text="{Binding}"/>
                                        </Grid>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseRightButtonUp">
                                                <i:InvokeCommandAction Command="{Binding ToggleWatchdogRunStateCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ContentControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </DockPanel>
                    
                </DockPanel>
                
                <ItemsControl 
                Grid.Row="0"
                Grid.Column="0"
                Margin="20 20 20 0"
                Background="Transparent"
                ItemsSource="{Binding HardwareValues}"
                >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel Margin="0 10 0 10">
                                <TextBlock
                                Text="{Binding ShortName}"
                                FontFamily="Consola"
                                FontSize="20"
                                FontWeight="DemiBold"                                
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                MinWidth="45"
                                Style="{StaticResource TextStyle}"
                                    >
                                </TextBlock>
                                <Grid>
                                    <ProgressBar
                                 HorizontalAlignment="Right" 
                                 VerticalAlignment="Center"
                                 Margin="20 0 0 0"
                                 Height="25"
                                 BorderThickness="1" 
                                 Background="Transparent"
                                 Value="{Binding MainValue}"/>
                                    <TextBlock 
                                   FontSize="15"
                                   Style="{StaticResource TextStyle}"
                                   FontWeight="DemiBold"
                                   HorizontalAlignment="Right" 
                                   Text="{Binding}"
                                   Margin="0 0 5 0"/>

                                </Grid>
                            </DockPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Grid>
        </Border>
    </Grid>
</Window>
